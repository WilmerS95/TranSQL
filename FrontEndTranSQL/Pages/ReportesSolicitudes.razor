@page "/reportes-solicitudes"
@inject HttpClient Http
@using TranSQL.shared.DTO
@using CurrieTechnologies.Razor.SweetAlert2
@inject SweetAlertService Swal

<h3 class="text-center mt-4 mb-4">Reporte de Solicitudes</h3>

@if (solicitudes != null && solicitudes.Any())
{
    <div class="table-responsive">
        <table class="table table-hover table-bordered table-striped align-middle">
            <thead class="table-dark">
                <tr>
                    <th>Id Solicitud</th>
                    <th>Motivo</th>
                    <th>Fecha</th>
                    <th>Estado</th>
                    <th>Colaborador</th>
                    <th>Justificación de Rechazo</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var solicitud in solicitudes)
                {
                    <tr>
                        <td>@solicitud.IdSolicitud</td>
                        <td>@solicitud.Motivo</td>
                        <td>@solicitud.Fecha.ToString("dd/MM/yyyy")</td>
                        <td>@solicitud.NombreEstadoSolicitud</td>
                        <td>@solicitud.ColaboradorNombreCompleto</td>
                        <td>@solicitud.JustificacionRechazo</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}
else
{
    <p>No hay solicitudes para mostrar.</p>
}

@code {
    private List<SolicitudReservacionReporteDTO> solicitudes = new();

    protected override async Task OnInitializedAsync()
    {
        await MostrarReporteSolicitudes();
    }

    private async Task MostrarReporteSolicitudes()
    {
        try
        {
            var response = await Http.GetAsync("api/solicitudesreservacion/reporte");
            if (response.IsSuccessStatusCode)
            {
                solicitudes = await response.Content.ReadFromJsonAsync<List<SolicitudReservacionReporteDTO>>();
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                Console.WriteLine($"Error en la respuesta del servidor: {errorContent}");
                await Swal.FireAsync("Error", $"No se pudo cargar el reporte: {errorContent}", "error");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error: {ex.Message}");
            await Swal.FireAsync("Error", "No se pudo cargar el reporte de solicitudes.", "error");
        }
    }
}
