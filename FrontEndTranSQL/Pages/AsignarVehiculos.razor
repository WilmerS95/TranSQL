@using TranSQL.shared.models
@page "/asignar-vehiculos/{idSolicitud:int}"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<h3>Asignar Vehículos a la Solicitud @idSolicitud</h3>

<EditForm Model="@asignacionModel" OnValidSubmit="ProcesarAsignacion">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <label>Seleccione Vehículos Disponibles:</label>
    @foreach (var vehiculo in vehiculosDisponibles)
    {
        <div>
            <input type="checkbox" @bind="@vehiculo.Seleccionado" />
            <label>@vehiculo.Placa</label>
        </div>
    }

    <button type="submit">Asignar Vehículos</button>
</EditForm>

@code {
    [Parameter]
    public int idSolicitud { get; set; }
    private List<VehiculoSeleccionado> vehiculosDisponibles = new List<VehiculoSeleccionado>();

    private object asignacionModel = new();

    protected override async Task OnInitializedAsync()
    {
        vehiculosDisponibles = await Http.GetFromJsonAsync<List<VehiculoSeleccionado>>("api/vehiculos/disponibles");
    }

    private async Task ProcesarAsignacion()
    {
        var placasSeleccionadas = vehiculosDisponibles
            .Where(v => v.Seleccionado)
            .Select(v => v.Placa)
            .ToList();

        var response = await Http.PutAsJsonAsync($"api/vehiculos/asignar-vehiculos/{idSolicitud}", placasSeleccionadas);

        if (response.IsSuccessStatusCode)
        {
            NavigationManager.NavigateTo("/logistica-solicitudes");
        }
        else
        {
            Console.WriteLine("Error en la asignación.");
        }
    }

    public class VehiculoSeleccionado
    {
        public string Placa { get; set; }
        public bool Seleccionado { get; set; }
    }
}

